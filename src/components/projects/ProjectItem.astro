---
import GithubIcon from '../../icons/GithubIcon.astro';
import type { Project } from '../../types/project';

interface Props {
  project: Project;
}

const {
  project: { title, description, old, link, github, image, tags },
} = Astro.props;
---

<article class="flex flex-col justify-center items-start p-2 gap-3 w-full">
  <h3 class="text-lg sm:text-xl font-semibold text-amber-300">{title}</h3>
  <p class="sm:text-lg text-pretty">{description}</p>
  <ul class="flex gap-2 flex-row flex-wrap">
    {
      tags.map((tag) => (
        <li>
          <span
            class={`flex items-center justify-center gap-x-2 rounded-full text-sm ${tag.class} py-1 px-2`}
          >
            {tag.icon && <tag.icon class="size-4" />}
            {tag.name}
          </span>
        </li>
      ))
    }
  </ul>
  {
    github && (
      <a
        href={github}
        class="inline-flex items-center px-4 py-2 gap-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
        target="_blank"
        rel="noopener noreferrer"
      >
        <GithubIcon class="size-5" />
        Github
      </a>
    )
  }
  {
    image && (
      <img
        class="rounded shadow-2xl shadow-white/10"
        src={image}
        alt={`captura de pantalla del proyecto ${title}`}
      />
    )
  }
</article>
